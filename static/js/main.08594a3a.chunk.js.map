{"version":3,"sources":["assets/noImage.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","upComing","movieDetail","append_to_response","searchMovies","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","searchTV","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","searchTerm","movieResults","tvResults","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByTerm","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08594a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.590bb924.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Now Loading...\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 2px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noImage.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ★\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title> Movies | Nomflix </title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: \"ee55cbc997d84ed06ca7ede3d481b581\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  searchMovies: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  searchTV: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upComing();\n\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find Movies Information\"\n      });\n      console.log(error);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(\"home\", this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find TV Show information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  searchTerm,\n  movieResults,\n  tvResults,\n  handleSubmit,\n  updateTerm,\n  loading,\n  error\n}) => (\n  <Container>\n    <Helmet>\n      <title> Search | Nomflix </title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message\n              text={`Nothing Found for: ${searchTerm}`}\n              color=\"#95a5a6\"\n            />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  searchByTerm = async searchTerm => {\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.searchMovies(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.searchTV(searchTerm);\n\n      this.setState({ movieResults, tvResults });\n    } catch (error) {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      updateTerm,\n      loading,\n      error\n    } = this.state;\n    console.log(\"search\", this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  z-index: 1;\n  position: relative;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noImage.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const parsedId = parseInt(id);\n    const { isMovie } = this.state;\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch (error) {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route\n          path=\"https://asw-almighty.github.io/nomflix/\"\n          exact\n          component={Home}\n        />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n  ${reset};\n  a{\n    text-decoration:none;\n    color:inherit;\n  }\n  *{\n    box-sizing:border-box;\n  }\n  body{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:12px;\n    background-color:rgba(20,20,20,1);\n    color:white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyle;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}